.mr-desktop-relative {
  position: relative;
}
.mr-desktop-absolute {
  position: absolute;
}
.mr-desktop-fixed {
  position: fixed;
  z-index: 3;
}
.mr-desktop-sticky {
  position: -webkit-sticky;
  position: sticky;
  z-index: 3;
}
.mr-desktop-aligntop {
  vertical-align: top;
  align-items: flex-start;
  align-content: flex-start;
}
.mr-desktop-alignbottom {
  align-items: flex-end;
  align-content: flex-end;
  vertical-align: bottom;
}
.mr-desktop-top {
  top: 0;
  bottom: auto;
}
.mr-desktop-offsettop {
  top: var(--offset, 0);
}
.mr-desktop-right {
  right: 0;
  left: auto;
}
.mr-desktop-offsetright {
  right: var(--offset, 0);
}
.mr-desktop-middle {
  align-items: center;
  align-content: center;
  vertical-align: middle;
}
.mr-desktop-left {
  left: 0;
  right: auto;
}
.mr-desktop-offsetleft {
  left: var(--offset, 0);
}
.mr-desktop-floatleft {
  float: left;
}
.mr-desktop-floatright {
  float: right;
}
.mr-desktop-center,
.mr-desktop-marginauto {
  margin-left: auto;
  margin-right: auto;
}
.mr-desktop-bottom {
  bottom: 0;
  top: auto;
}
.mr-desktop-offsetbottom {
  bottom: var(--offset, 0);
}
.mr-desktop-baseline {
  align-items: baseline;
  vertical-align: baseline;
}
.mr-desktop-offsetelementtop:not(.mr-desktop-offsetelementleft):not(.mr-desktop-offsetelementright) {
  transform: translateY(calc(0 - var(--offset-element, 100%)));
}
.mr-desktop-offsetelementtop.mr-desktop-offsetelementleft {
  transform: translate(
    calc(0 - var(--offset-element, 100%)),
    calc(0 - var(--offset-element, 100%))
  );
}
.mr-desktop-offsetelementtop.mr-desktop-offsetelementright {
  transform: translate(
    var(--offset-element, 100%),
    calc(0 - var(--offset-element, 100%))
  );
}
.mr-desktop-offsetelementright:not(.mr-desktop-offsetelementtop):not(.mr-desktop-offsetelementbottom) {
  transform: translateX(var(--offset-element, 100%));
}
.mr-desktop-offsetelementbottom:not(.mr-desktop-offsetelementleft):not(.mr-desktop-offsetelementright) {
  transform: translateY(var(--offset-element, 100%));
}
.mr-desktop-offsetelementbottom.mr-desktop-offsetelementleft {
  transform: translate(calc(0 - var(--offset-element, 100%)), 100%);
}
.mr-desktop-offsetelementbottom.mr-desktop-offsetelementright {
  transform: translate(
    var(--offset-element, 100%),
    var(--offset-element, 100%)
  );
}
.mr-desktop-offsetelementleft:not(.mr-desktop-offsetelementtop):not(.mr-desktop-offsetelementbottom) {
  transform: translateX(calc(0 - var(--offset-element, 100%)));
}
